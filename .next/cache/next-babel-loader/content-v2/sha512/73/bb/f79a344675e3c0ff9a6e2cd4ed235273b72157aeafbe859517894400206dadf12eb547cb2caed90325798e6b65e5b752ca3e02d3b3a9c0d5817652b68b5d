{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/chihhao/workspace/webApp/Nextjs/Udemy/portfolio-nextjs/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/chihhao/workspace/webApp/Nextjs/Udemy/portfolio-nextjs/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/chihhao/workspace/webApp/Nextjs/Udemy/portfolio-nextjs/components/contact/contact-form.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport Notification from '../ui/notification';\nimport classes from './contact-form.module.css';\n\nvar sendContactData = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(contactDetails) {\n    var response, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch('/api/contact', {\n              method: 'POST',\n              body: JSON.stringify(contactDetails),\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            });\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return response.json;\n\n          case 5:\n            data = _context.sent;\n\n            if (response.ok) {\n              _context.next = 8;\n              break;\n            }\n\n            throw new Error(data.message || 'Something went wrong!');\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function sendContactData(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar ContactForm = function ContactForm() {\n  _s();\n\n  var _useState = useState(''),\n      enteredEmail = _useState[0],\n      setEnteredEmail = _useState[1];\n\n  var _useState2 = useState(''),\n      enteredName = _useState2[0],\n      setEnteredName = _useState2[1];\n\n  var _useState3 = useState(''),\n      enteredMessage = _useState3[0],\n      setEnteredMessage = _useState3[1]; // status: pending, success, error\n\n\n  var _useState4 = useState(),\n      requestStatus = _useState4[0],\n      setRequestStatus = _useState4[1];\n\n  var _useState5 = useState(),\n      requestError = _useState5[0],\n      setRequestError = _useState5[1];\n\n  useEffect(function () {\n    if (requestStatus === 'success' || requestStatus === 'error') {\n      var timer = setTimeout(function () {\n        setRequestStatus(null);\n        setRequestError(null);\n      }, 2000);\n      return function () {\n        return clearTimeout(timer);\n      };\n    }\n  }, [requestStatus]); // optional: Add client-side validation\n\n  var sendMessageHandler = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              event.preventDefault();\n              setRequestStatus('pending');\n              _context2.prev = 2;\n              _context2.next = 5;\n              return sendContactData({\n                email: enteredEmail,\n                name: enteredName,\n                message: enteredMessage\n              });\n\n            case 5:\n              setRequestStatus('success');\n              setEnteredEmail('');\n              setEnteredName('');\n              setEnteredMessage('');\n              _context2.next = 15;\n              break;\n\n            case 11:\n              _context2.prev = 11;\n              _context2.t0 = _context2[\"catch\"](2);\n              setRequestError(_context2.t0.message);\n              setRequestStatus('error');\n\n            case 15:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[2, 11]]);\n    }));\n\n    return function sendMessageHandler(_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var notification;\n\n  if (requestStatus === 'pending') {\n    notification = {\n      status: 'pending',\n      title: 'Sending message...',\n      message: 'Your message is on its way!'\n    };\n  }\n\n  if (requestStatus === 'success') {\n    notification = {\n      status: 'success',\n      title: 'Success!',\n      message: 'Message sent successfully'\n    };\n  }\n\n  if (requestStatus === 'error') {\n    notification = {\n      status: 'error',\n      title: 'Error!',\n      message: requestError\n    };\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.contact,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"How can I help you?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.form,\n      onSubmit: sendMessageHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.controls,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"You Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            value: enteredEmail,\n            onChange: function onChange(event) {\n              return setEnteredEmail(event.target.value);\n            },\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"You Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"name\",\n            value: enteredName,\n            onChange: function onChange(event) {\n              return setEnteredName(event.target.value);\n            },\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"message\",\n          children: \"You Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"message\",\n          rows: \"5\",\n          value: enteredMessage,\n          onChange: function onChange(event) {\n            return setEnteredMessage(event.target.value);\n          },\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Send Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, _this), notification && /*#__PURE__*/_jsxDEV(Notification, {\n      status: notification.status,\n      title: notification.title,\n      message: notification.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(ContactForm, \"LNZ8Pbj4DDGofzABNPT0BzH6UlY=\");\n\n_c = ContactForm;\nexport default ContactForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"sources":["/Users/chihhao/workspace/webApp/Nextjs/Udemy/portfolio-nextjs/components/contact/contact-form.js"],"names":["useState","useEffect","Notification","classes","sendContactData","contactDetails","fetch","method","body","JSON","stringify","headers","response","json","data","ok","Error","message","ContactForm","enteredEmail","setEnteredEmail","enteredName","setEnteredName","enteredMessage","setEnteredMessage","requestStatus","setRequestStatus","requestError","setRequestError","timer","setTimeout","clearTimeout","sendMessageHandler","event","preventDefault","email","name","notification","status","title","contact","form","controls","control","target","value","actions"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport Notification from '../ui/notification'\n\nimport classes from './contact-form.module.css'\n\n\nconst sendContactData = async (contactDetails) => {\n  const response = await fetch('/api/contact',  {\n    method: 'POST',\n    body: JSON.stringify(contactDetails),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  })\n\n  const data = await response.json\n  if (!response.ok) {\n    throw new Error(data.message || 'Something went wrong!')\n  }\n}\n\n\nconst ContactForm = () => {\n\n  const [enteredEmail, setEnteredEmail] = useState('')\n  const [enteredName, setEnteredName] = useState('')\n  const [enteredMessage, setEnteredMessage] = useState('')\n\n  // status: pending, success, error\n  const [requestStatus, setRequestStatus] = useState()\n  const [requestError, setRequestError] = useState()\n\n  useEffect(() => {\n    if (requestStatus === 'success' || requestStatus === 'error') {\n      const timer = setTimeout(() => {\n        setRequestStatus(null)\n        setRequestError(null)\n      }, 2000)\n\n      return () => clearTimeout(timer)\n    }\n  }, [requestStatus])\n\n  // optional: Add client-side validation\n\n  const sendMessageHandler = async (event) => {\n    event.preventDefault()\n    setRequestStatus('pending')\n\n    try {\n      await sendContactData({\n        email: enteredEmail,\n        name: enteredName,\n        message: enteredMessage\n      })\n      setRequestStatus('success')\n\n      setEnteredEmail('')\n      setEnteredName('')\n      setEnteredMessage('')\n    } catch (err) {\n      setRequestError(err.message)\n      setRequestStatus('error')\n    }\n  }\n\n\n  let notification\n  if (requestStatus === 'pending') {\n    notification = {\n      status: 'pending',\n      title: 'Sending message...',\n      message: 'Your message is on its way!'\n    }\n  }\n\n  if (requestStatus === 'success') {\n    notification = {\n      status: 'success',\n      title: 'Success!',\n      message: 'Message sent successfully'\n    }\n  }\n\n  if (requestStatus === 'error') {\n    notification = {\n      status: 'error',\n      title: 'Error!',\n      message: requestError\n    }\n  }\n\n  return (\n    <section className={classes.contact}>\n      <h1>How can I help you?</h1>\n      <form className={classes.form} onSubmit={sendMessageHandler}>\n        <div className={classes.controls}>\n          <div className={classes.control}>\n            <label htmlFor='email'>You Email</label>\n            <input \n              type='email' \n              id='email' \n              value={enteredEmail}\n              onChange={event => setEnteredEmail(event.target.value)}\n              required \n            />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor='name'>You Name</label>\n            <input \n              type='text' \n              id='name' \n              value={enteredName} \n              onChange={event => setEnteredName(event.target.value)}\n              required \n            />\n          </div>\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='message'>You Message</label>\n          <textarea \n            id='message' \n            rows='5' \n            value={enteredMessage}\n            onChange={event => setEnteredMessage(event.target.value)}\n            required\n          />\n        </div>\n        <div className={classes.actions}>\n          <button>Send Message</button>\n        </div>\n      </form>\n      { \n        notification &&\n        <Notification \n          status={notification.status}\n          title={notification.title}\n          message={notification.message}\n        />\n      }\n    </section>\n  )\n}\n\n\nexport default ContactForm"]},"metadata":{},"sourceType":"module"}