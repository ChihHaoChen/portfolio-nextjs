{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/chihhao/workspace/webApp/Nextjs/Udemy/portfolio-nextjs/pages/posts/[slug].js\";\nimport Head from 'next/head';\nimport PostContent from '../../components/posts/post-detail/post-content';\nimport { getPostData, getPostFiles } from '../../lib/posts-util';\n\nconst PostDetailPage = props => {\n  const {\n    post\n  } = props;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: post.excerpt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostContent, {\n      post: post\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nexport const getStaticProps = context => {\n  const {\n    params\n  } = context;\n  const {\n    slug\n  } = params;\n  const postData = getPostData(slug);\n  return {\n    props: {\n      post: postData\n    },\n    revalidate: 1200\n  };\n};\nexport const getStaticPaths = () => {\n  const postFilenames = getPostFiles();\n  const slugs = postFilenames.map(fileName => fileName.replace(/\\.md$/, ''));\n  return {\n    paths: slugs.map(slug => ({\n      params: {\n        slug: slug\n      }\n    })),\n    fallback: false\n  };\n};\nexport default PostDetailPage;","map":{"version":3,"sources":["/Users/chihhao/workspace/webApp/Nextjs/Udemy/portfolio-nextjs/pages/posts/[slug].js"],"names":["Head","PostContent","getPostData","getPostFiles","PostDetailPage","props","post","title","excerpt","getStaticProps","context","params","slug","postData","revalidate","getStaticPaths","postFilenames","slugs","map","fileName","replace","paths","fallback"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AAEA,OAAOC,WAAP,MAAwB,iDAAxB;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,sBAA1C;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAChC,QAAM;AAAEC,IAAAA;AAAF,MAAWD,KAAjB;AAEA,sBACE;AAAA,4BACE,QAAC,IAAD;AAAA,8BACE;AAAA,kBAAQC,IAAI,CAACC;AAAb;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,aADP;AAEE,QAAA,OAAO,EAAED,IAAI,CAACE;AAFhB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAQE,QAAC,WAAD;AAAa,MAAA,IAAI,EAAEF;AAAnB;AAAA;AAAA;AAAA;AAAA,YARF;AAAA,kBADF;AAYD,CAfD;;AAkBA,OAAO,MAAMG,cAAc,GAAIC,OAAD,IAAa;AACzC,QAAM;AAAEC,IAAAA;AAAF,MAAaD,OAAnB;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAWD,MAAjB;AAEA,QAAME,QAAQ,GAAGX,WAAW,CAACU,IAAD,CAA5B;AAEA,SAAO;AACLP,IAAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EAAEO;AADD,KADF;AAILC,IAAAA,UAAU,EAAE;AAJP,GAAP;AAMD,CAZM;AAeP,OAAO,MAAMC,cAAc,GAAG,MAAM;AAElC,QAAMC,aAAa,GAAGb,YAAY,EAAlC;AAEA,QAAMc,KAAK,GAAGD,aAAa,CAACE,GAAd,CAAkBC,QAAQ,IAAIA,QAAQ,CAACC,OAAT,CAAiB,OAAjB,EAA0B,EAA1B,CAA9B,CAAd;AAEA,SAAO;AACLC,IAAAA,KAAK,EAAEJ,KAAK,CAACC,GAAN,CAAUN,IAAI,KAAK;AAAED,MAAAA,MAAM,EAAE;AAAEC,QAAAA,IAAI,EAAEA;AAAR;AAAV,KAAL,CAAd,CADF;AAELU,IAAAA,QAAQ,EAAE;AAFL,GAAP;AAID,CAVM;AAYP,eAAelB,cAAf","sourcesContent":["import Head from 'next/head'\n\nimport PostContent from '../../components/posts/post-detail/post-content'\nimport { getPostData, getPostFiles } from '../../lib/posts-util'\n\nconst PostDetailPage = (props) => {\n  const { post } = props\n\n  return (\n    <>\n      <Head>\n        <title>{post.title}</title>\n        <meta \n          name='description'\n          content={post.excerpt}\n        />\n      </Head>\n      <PostContent post={post} />\n    </>\n  )\n}\n\n\nexport const getStaticProps = (context) => {\n  const { params } = context\n  const { slug } = params\n\n  const postData = getPostData(slug)\n\n  return {\n    props: {\n      post: postData\n    },\n    revalidate: 1200\n  }\n}\n\n\nexport const getStaticPaths = () => {\n\n  const postFilenames = getPostFiles()\n\n  const slugs = postFilenames.map(fileName => fileName.replace(/\\.md$/, ''))\n\n  return {\n    paths: slugs.map(slug => ({ params: { slug: slug } })),\n    fallback: false\n  }\n}\n\nexport default PostDetailPage"]},"metadata":{},"sourceType":"module"}