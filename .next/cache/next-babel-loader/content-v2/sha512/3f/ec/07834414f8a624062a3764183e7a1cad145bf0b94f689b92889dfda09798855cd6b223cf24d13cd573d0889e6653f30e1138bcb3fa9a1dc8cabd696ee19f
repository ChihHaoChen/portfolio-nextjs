{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/chihhao/workspace/webApp/Nextjs/Udemy/portfolio-nextjs/components/posts/post-detail/post-content.js\",\n    _this = this;\n\nimport ReactMarkdown from 'react-markdown';\nimport Image from 'next/image';\nimport { PrismLight as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport atomDark from 'react-syntax-highlighter/dist/cjs/styles/prism/atom-dark';\nimport js from 'react-syntax-highlighter/dist/cjs/languages/prism/javascript';\nimport css from 'react-syntax-highlighter/dist/cjs/languages/prism/css';\nimport PostHeader from './post-header';\nimport classes from './post-content.module.css';\nSyntaxHighlighter.registerLanguage('js', js);\nSyntaxHighlighter.registerLanguage('css', css);\n\nvar PostContent = function PostContent(props) {\n  var post = props.post;\n  var ImagePath = \"/images/posts/\".concat(post.slug, \"/\").concat(post.image);\n  var renderers = {\n    // img(image) {\n    //   return <Image src={`/images/posts/${post.slug}/${image.src}`} alt={image.alt} width={} height={} />\n    // },\n    p: function p(paragraph) {\n      var node = paragraph.node;\n\n      if (node.children[0].tagName === 'img') {\n        var image = node.children[0];\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.image,\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            src: \"/images/posts/\".concat(post.slug, \"/\").concat(image.properties.src),\n            alt: image.alt,\n            width: 600,\n            height: 300\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: paragraph.children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 14\n      }, this);\n    },\n    code: function code(_code) {\n      var className = _code.className,\n          children = _code.children;\n      var language = className.split('-')[1];\n      return /*#__PURE__*/_jsxDEV(SyntaxHighlighter, {\n        language: language,\n        children: children,\n        style: atomDark\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    className: classes.content,\n    children: [/*#__PURE__*/_jsxDEV(PostHeader, {\n      title: post.title,\n      image: ImagePath\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n      components: renderers,\n      children: post.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = PostContent;\nexport default PostContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostContent\");","map":{"version":3,"sources":["/Users/chihhao/workspace/webApp/Nextjs/Udemy/portfolio-nextjs/components/posts/post-detail/post-content.js"],"names":["ReactMarkdown","Image","PrismLight","SyntaxHighlighter","atomDark","js","css","PostHeader","classes","registerLanguage","PostContent","props","post","ImagePath","slug","image","renderers","p","paragraph","node","children","tagName","properties","src","alt","code","className","language","split","content","title"],"mappings":";;;;;AAAA,OAAOA,aAAP,MAA0B,gBAA1B;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,SAASC,UAAU,IAAIC,iBAAvB,QAAgD,0BAAhD;AACA,OAAOC,QAAP,MAAqB,0DAArB;AACA,OAAOC,EAAP,MAAe,8DAAf;AACA,OAAOC,GAAP,MAAgB,uDAAhB;AAEA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAGAL,iBAAiB,CAACM,gBAAlB,CAAmC,IAAnC,EAAyCJ,EAAzC;AACAF,iBAAiB,CAACM,gBAAlB,CAAmC,KAAnC,EAA0CH,GAA1C;;AAEA,IAAMI,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;AAAA,MACrBC,IADqB,GACZD,KADY,CACrBC,IADqB;AAE7B,MAAMC,SAAS,2BAAoBD,IAAI,CAACE,IAAzB,cAAiCF,IAAI,CAACG,KAAtC,CAAf;AAEA,MAAMC,SAAS,GAAG;AAChB;AACA;AACA;AACAC,IAAAA,CAJgB,aAIdC,SAJc,EAIH;AAAA,UACHC,IADG,GACMD,SADN,CACHC,IADG;;AAGX,UAAIA,IAAI,CAACC,QAAL,CAAc,CAAd,EAAiBC,OAAjB,KAA6B,KAAjC,EAAwC;AACtC,YAAMN,KAAK,GAAGI,IAAI,CAACC,QAAL,CAAc,CAAd,CAAd;AAEA,4BACE;AAAK,UAAA,SAAS,EAAEZ,OAAO,CAACO,KAAxB;AAAA,iCACE,QAAC,KAAD;AAAO,YAAA,GAAG,0BAAmBH,IAAI,CAACE,IAAxB,cAAgCC,KAAK,CAACO,UAAN,CAAiBC,GAAjD,CAAV;AAAkE,YAAA,GAAG,EAAER,KAAK,CAACS,GAA7E;AAAkF,YAAA,KAAK,EAAE,GAAzF;AAA8F,YAAA,MAAM,EAAE;AAAtG;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF;AAKD;;AACD,0BAAO;AAAA,kBAAIN,SAAS,CAACE;AAAd;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAjBe;AAkBhBK,IAAAA,IAlBgB,gBAkBXA,KAlBW,EAkBL;AAAA,UACDC,SADC,GACuBD,KADvB,CACDC,SADC;AAAA,UACUN,QADV,GACuBK,KADvB,CACUL,QADV;AAET,UAAMO,QAAQ,GAAGD,SAAS,CAACE,KAAV,CAAgB,GAAhB,EAAqB,CAArB,CAAjB;AAEA,0BACE,QAAC,iBAAD;AACE,QAAA,QAAQ,EAAED,QADZ;AAEE,QAAA,QAAQ,EAAEP,QAFZ;AAGE,QAAA,KAAK,EAAEhB;AAHT;AAAA;AAAA;AAAA;AAAA,cADF;AAOD;AA7Be,GAAlB;AAgCA,sBACE;AAAS,IAAA,SAAS,EAAEI,OAAO,CAACqB,OAA5B;AAAA,4BACE,QAAC,UAAD;AACE,MAAA,KAAK,EAAEjB,IAAI,CAACkB,KADd;AAEE,MAAA,KAAK,EAAEjB;AAFT;AAAA;AAAA;AAAA;AAAA,aADF,eAKE,QAAC,aAAD;AAAe,MAAA,UAAU,EAAEG,SAA3B;AAAA,gBACGJ,IAAI,CAACiB;AADR;AAAA;AAAA;AAAA;AAAA,aALF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAWD,CA/CD;;KAAMnB,W;AAkDN,eAAeA,WAAf","sourcesContent":["import ReactMarkdown from 'react-markdown'\nimport Image from 'next/image'\nimport { PrismLight as SyntaxHighlighter } from 'react-syntax-highlighter'\nimport atomDark from 'react-syntax-highlighter/dist/cjs/styles/prism/atom-dark'\nimport js from 'react-syntax-highlighter/dist/cjs/languages/prism/javascript'\nimport css from 'react-syntax-highlighter/dist/cjs/languages/prism/css'\n\nimport PostHeader from './post-header'\nimport classes from './post-content.module.css'\n\n\nSyntaxHighlighter.registerLanguage('js', js)\nSyntaxHighlighter.registerLanguage('css', css)\n\nconst PostContent = (props) => {\n  const { post } = props\n  const ImagePath = `/images/posts/${post.slug}/${post.image}`\n\n  const renderers = {\n    // img(image) {\n    //   return <Image src={`/images/posts/${post.slug}/${image.src}`} alt={image.alt} width={} height={} />\n    // },\n    p(paragraph) {\n      const { node } = paragraph\n\n      if (node.children[0].tagName === 'img') {\n        const image = node.children[0]\n\n        return (\n          <div className={classes.image}>\n            <Image src={`/images/posts/${post.slug}/${image.properties.src}`} alt={image.alt} width={600} height={300} />\n          </div>\n        )\n      }\n      return <p>{paragraph.children}</p>\n    },\n    code(code) {\n      const { className, children } = code\n      const language = className.split('-')[1]\n\n      return (\n        <SyntaxHighlighter \n          language={language} \n          children={children} \n          style={atomDark}\n        />\n      )\n    }\n  }\n\n  return (\n    <article className={classes.content}>\n      <PostHeader \n        title={post.title}\n        image={ImagePath}\n      />\n      <ReactMarkdown components={renderers}>\n        {post.content}\n      </ReactMarkdown>\n    </article>\n  )\n}\n\n\nexport default PostContent"]},"metadata":{},"sourceType":"module"}